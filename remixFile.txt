pragma solidity ^0.4.23;

/**
 * Utility library of inline functions on addresses
 */
library AddressUtils {

  /**
   * Returns whether the target address is a contract
   * @dev This function will return false if invoked during the constructor of a contract,
   * as the code is not actually created until after the constructor finishes.
   * @param addr address to check
   * @return whether the target address is a contract
   */
  function isContract(address addr) internal view returns (bool) {
    uint256 size;
    // XXX Currently there is no better way to check if there is a contract in an address
    // than to check the size of the code at that address.
    // See https://ethereum.stackexchange.com/a/14016/36603
    // for more details about how this works.
    // TODO Check this again before the Serenity release, because all addresses will be
    // contracts then.
    // solium-disable-next-line security/no-inline-assembly
    assembly { size := extcodesize(addr) }
    return size > 0;
  }

}




/**
 * @title SafeMath
 * @dev Math operations with safety checks that throw on error
 */
library SafeMath {

  /**
  * @dev Multiplies two numbers, throws on overflow.
  */
  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {
    // Gas optimization: this is cheaper than asserting 'a' not being zero, but the
    // benefit is lost if 'b' is also tested.
    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522
    if (a == 0) {
      return 0;
    }

    c = a * b;
    assert(c / a == b);
    return c;
  }

  /**
  * @dev Integer division of two numbers, truncating the quotient.
  */
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    // assert(b > 0); // Solidity automatically throws when dividing by 0
    // uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold
    return a / b;
  }

  /**
  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).
  */
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    assert(b <= a);
    return a - b;
  }

  /**
  * @dev Adds two numbers, throws on overflow.
  */
  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {
    c = a + b;
    assert(c >= a);
    return c;
  }
}





/**
 * @title ERC165
 * @dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md
 */
interface ERC165 {

  /**
   * @notice Query if a contract implements an interface
   * @param _interfaceId The interface identifier, as specified in ERC-165
   * @dev Interface identification is specified in ERC-165. This function
   * uses less than 30,000 gas.
   */
  function supportsInterface(bytes4 _interfaceId)
    external
    view
    returns (bool);
}





/**
 * @title ERC721 Non-Fungible Token Standard basic interface
 * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md
 */
contract ERC721Basic is ERC165 {

  bytes4 internal constant InterfaceId_ERC721 = 0x80ac58cd;
  /*
   * 0x80ac58cd ===
   *   bytes4(keccak256('balanceOf(address)')) ^
   *   bytes4(keccak256('ownerOf(uint256)')) ^
   *   bytes4(keccak256('approve(address,uint256)')) ^
   *   bytes4(keccak256('getApproved(uint256)')) ^
   *   bytes4(keccak256('setApprovalForAll(address,bool)')) ^
   *   bytes4(keccak256('isApprovedForAll(address,address)')) ^
   *   bytes4(keccak256('transferFrom(address,address,uint256)')) ^
   *   bytes4(keccak256('safeTransferFrom(address,address,uint256)')) ^
   *   bytes4(keccak256('safeTransferFrom(address,address,uint256,bytes)'))
   */

  bytes4 internal constant InterfaceId_ERC721Exists = 0x4f558e79;
  /*
   * 0x4f558e79 ===
   *   bytes4(keccak256('exists(uint256)'))
   */

  bytes4 internal constant InterfaceId_ERC721Enumerable = 0x780e9d63;
  /**
   * 0x780e9d63 ===
   *   bytes4(keccak256('totalSupply()')) ^
   *   bytes4(keccak256('tokenOfOwnerByIndex(address,uint256)')) ^
   *   bytes4(keccak256('tokenByIndex(uint256)'))
   */

  bytes4 internal constant InterfaceId_ERC721Metadata = 0x5b5e139f;
  /**
   * 0x5b5e139f ===
   *   bytes4(keccak256('name()')) ^
   *   bytes4(keccak256('symbol()')) ^
   *   bytes4(keccak256('tokenURI(uint256)'))
   */

  event Transfer(
    address indexed _from,
    address indexed _to,
    uint256 indexed _tokenId
  );
  event Approval(
    address indexed _owner,
    address indexed _approved,
    uint256 indexed _tokenId
  );
  event ApprovalForAll(
    address indexed _owner,
    address indexed _operator,
    bool _approved
  );

  function balanceOf(address _owner) public view returns (uint256 _balance);
  function ownerOf(uint256 _tokenId) public view returns (address _owner);
  function exists(uint256 _tokenId) public view returns (bool _exists);

  function approve(address _to, uint256 _tokenId) public;
  function getApproved(uint256 _tokenId)
    public view returns (address _operator);

  function setApprovalForAll(address _operator, bool _approved) public;
  function isApprovedForAll(address _owner, address _operator)
    public view returns (bool);

  function transferFrom(address _from, address _to, uint256 _tokenId) public;
  function safeTransferFrom(address _from, address _to, uint256 _tokenId)
    public;

  function safeTransferFrom(
    address _from,
    address _to,
    uint256 _tokenId,
    bytes _data
  )
    public;
}







/**
 * @title SupportsInterfaceWithLookup
 * @author Matt Condon (@shrugs)
 * @dev Implements ERC165 using a lookup table.
 */
contract SupportsInterfaceWithLookup is ERC165 {

  bytes4 public constant InterfaceId_ERC165 = 0x01ffc9a7;
  /**
   * 0x01ffc9a7 ===
   *   bytes4(keccak256('supportsInterface(bytes4)'))
   */

  /**
   * @dev a mapping of interface id to whether or not it's supported
   */
  mapping(bytes4 => bool) internal supportedInterfaces;

  /**
   * @dev A contract implementing SupportsInterfaceWithLookup
   * implement ERC165 itself
   */
  constructor()
    public
  {
    _registerInterface(InterfaceId_ERC165);
  }

  /**
   * @dev implement supportsInterface(bytes4) using a lookup table
   */
  function supportsInterface(bytes4 _interfaceId)
    external
    view
    returns (bool)
  {
    return supportedInterfaces[_interfaceId];
  }

  /**
   * @dev private method for registering an interface
   */
  function _registerInterface(bytes4 _interfaceId)
    internal
  {
    require(_interfaceId != 0xffffffff);
    supportedInterfaces[_interfaceId] = true;
  }
}





/**
 * @title ERC721 token receiver interface
 * @dev Interface for any contract that wants to support safeTransfers
 * from ERC721 asset contracts.
 */
contract ERC721Receiver {
  /**
   * @dev Magic value to be returned upon successful reception of an NFT
   *  Equals to `bytes4(keccak256("onERC721Received(address,address,uint256,bytes)"))`,
   *  which can be also obtained as `ERC721Receiver(0).onERC721Received.selector`
   */
  bytes4 internal constant ERC721_RECEIVED = 0x150b7a02;

  /**
   * @notice Handle the receipt of an NFT
   * @dev The ERC721 smart contract calls this function on the recipient
   * after a `safetransfer`. This function MAY throw to revert and reject the
   * transfer. Return of other than the magic value MUST result in the
   * transaction being reverted.
   * Note: the contract address is always the message sender.
   * @param _operator The address which called `safeTransferFrom` function
   * @param _from The address which previously owned the token
   * @param _tokenId The NFT identifier which is being transferred
   * @param _data Additional data with no specified format
   * @return `bytes4(keccak256("onERC721Received(address,address,uint256,bytes)"))`
   */
  function onERC721Received(
    address _operator,
    address _from,
    uint256 _tokenId,
    bytes _data
  )
    public
    returns(bytes4);
}







/**
 * @title ERC721 Non-Fungible Token Standard basic implementation
 * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md
 */
contract ERC721BasicToken is SupportsInterfaceWithLookup, ERC721Basic {

  using SafeMath for uint256;
  using AddressUtils for address;

  // Equals to `bytes4(keccak256("onERC721Received(address,address,uint256,bytes)"))`
  // which can be also obtained as `ERC721Receiver(0).onERC721Received.selector`
  bytes4 private constant ERC721_RECEIVED = 0x150b7a02;

  // Mapping from token ID to owner
  mapping (uint256 => address) internal tokenOwner;

  // Mapping from token ID to approved address
  mapping (uint256 => address) internal tokenApprovals;

  // Mapping from owner to number of owned token
  mapping (address => uint256) internal ownedTokensCount;

  // Mapping from owner to operator approvals
  mapping (address => mapping (address => bool)) internal operatorApprovals;

  constructor()
    public
  {
    // register the supported interfaces to conform to ERC721 via ERC165
    _registerInterface(InterfaceId_ERC721);
    _registerInterface(InterfaceId_ERC721Exists);
  }

  /**
   * @dev Gets the balance of the specified address
   * @param _owner address to query the balance of
   * @return uint256 representing the amount owned by the passed address
   */
  function balanceOf(address _owner) public view returns (uint256) {
    require(_owner != address(0));
    return ownedTokensCount[_owner];
  }

  /**
   * @dev Gets the owner of the specified token ID
   * @param _tokenId uint256 ID of the token to query the owner of
   * @return owner address currently marked as the owner of the given token ID
   */
  function ownerOf(uint256 _tokenId) public view returns (address) {
    address owner = tokenOwner[_tokenId];
    require(owner != address(0));
    return owner;
  }

  /**
   * @dev Returns whether the specified token exists
   * @param _tokenId uint256 ID of the token to query the existence of
   * @return whether the token exists
   */
  function exists(uint256 _tokenId) public view returns (bool) {
    address owner = tokenOwner[_tokenId];
    return owner != address(0);
  }

  /**
   * @dev Approves another address to transfer the given token ID
   * The zero address indicates there is no approved address.
   * There can only be one approved address per token at a given time.
   * Can only be called by the token owner or an approved operator.
   * @param _to address to be approved for the given token ID
   * @param _tokenId uint256 ID of the token to be approved
   */
  function approve(address _to, uint256 _tokenId) public {
    address owner = ownerOf(_tokenId);
    require(_to != owner);
    require(msg.sender == owner || isApprovedForAll(owner, msg.sender));

    tokenApprovals[_tokenId] = _to;
    emit Approval(owner, _to, _tokenId);
  }

  /**
   * @dev Gets the approved address for a token ID, or zero if no address set
   * @param _tokenId uint256 ID of the token to query the approval of
   * @return address currently approved for the given token ID
   */
  function getApproved(uint256 _tokenId) public view returns (address) {
    return tokenApprovals[_tokenId];
  }

  /**
   * @dev Sets or unsets the approval of a given operator
   * An operator is allowed to transfer all tokens of the sender on their behalf
   * @param _to operator address to set the approval
   * @param _approved representing the status of the approval to be set
   */
  function setApprovalForAll(address _to, bool _approved) public {
    require(_to != msg.sender);
    operatorApprovals[msg.sender][_to] = _approved;
    emit ApprovalForAll(msg.sender, _to, _approved);
  }

  /**
   * @dev Tells whether an operator is approved by a given owner
   * @param _owner owner address which you want to query the approval of
   * @param _operator operator address which you want to query the approval of
   * @return bool whether the given operator is approved by the given owner
   */
  function isApprovedForAll(
    address _owner,
    address _operator
  )
    public
    view
    returns (bool)
  {
    return operatorApprovals[_owner][_operator];
  }

  /**
   * @dev Transfers the ownership of a given token ID to another address
   * Usage of this method is discouraged, use `safeTransferFrom` whenever possible
   * Requires the msg sender to be the owner, approved, or operator
   * @param _from current owner of the token
   * @param _to address to receive the ownership of the given token ID
   * @param _tokenId uint256 ID of the token to be transferred
  */
  function transferFrom(
    address _from,
    address _to,
    uint256 _tokenId
  )
    public
  {
    require(isApprovedOrOwner(msg.sender, _tokenId));
    require(_from != address(0));
    require(_to != address(0));

    clearApproval(_from, _tokenId);
    removeTokenFrom(_from, _tokenId);
    addTokenTo(_to, _tokenId);

    emit Transfer(_from, _to, _tokenId);
  }

  /**
   * @dev Safely transfers the ownership of a given token ID to another address
   * If the target address is a contract, it must implement `onERC721Received`,
   * which is called upon a safe transfer, and return the magic value
   * `bytes4(keccak256("onERC721Received(address,address,uint256,bytes)"))`; otherwise,
   * the transfer is reverted.
   *
   * Requires the msg sender to be the owner, approved, or operator
   * @param _from current owner of the token
   * @param _to address to receive the ownership of the given token ID
   * @param _tokenId uint256 ID of the token to be transferred
  */
  function safeTransferFrom(
    address _from,
    address _to,
    uint256 _tokenId
  )
    public
  {
    // solium-disable-next-line arg-overflow
    safeTransferFrom(_from, _to, _tokenId, "");
  }

  /**
   * @dev Safely transfers the ownership of a given token ID to another address
   * If the target address is a contract, it must implement `onERC721Received`,
   * which is called upon a safe transfer, and return the magic value
   * `bytes4(keccak256("onERC721Received(address,address,uint256,bytes)"))`; otherwise,
   * the transfer is reverted.
   * Requires the msg sender to be the owner, approved, or operator
   * @param _from current owner of the token
   * @param _to address to receive the ownership of the given token ID
   * @param _tokenId uint256 ID of the token to be transferred
   * @param _data bytes data to send along with a safe transfer check
   */
  function safeTransferFrom(
    address _from,
    address _to,
    uint256 _tokenId,
    bytes _data
  )
    public
  {
    transferFrom(_from, _to, _tokenId);
    // solium-disable-next-line arg-overflow
    require(checkAndCallSafeTransfer(_from, _to, _tokenId, _data));
  }

  /**
   * @dev Returns whether the given spender can transfer a given token ID
   * @param _spender address of the spender to query
   * @param _tokenId uint256 ID of the token to be transferred
   * @return bool whether the msg.sender is approved for the given token ID,
   *  is an operator of the owner, or is the owner of the token
   */
  function isApprovedOrOwner(
    address _spender,
    uint256 _tokenId
  )
    internal
    view
    returns (bool)
  {
    address owner = ownerOf(_tokenId);
    // Disable solium check because of
    // https://github.com/duaraghav8/Solium/issues/175
    // solium-disable-next-line operator-whitespace
    return (
      _spender == owner ||
      getApproved(_tokenId) == _spender ||
      isApprovedForAll(owner, _spender)
    );
  }

  /**
   * @dev Internal function to mint a new token
   * Reverts if the given token ID already exists
   * @param _to The address that will own the minted token
   * @param _tokenId uint256 ID of the token to be minted by the msg.sender
   */
  function _mint(address _to, uint256 _tokenId) internal {
    require(_to != address(0));
    addTokenTo(_to, _tokenId);
    emit Transfer(address(0), _to, _tokenId);
  }

  /**
   * @dev Internal function to burn a specific token
   * Reverts if the token does not exist
   * @param _tokenId uint256 ID of the token being burned by the msg.sender
   */
  function _burn(address _owner, uint256 _tokenId) internal {
    clearApproval(_owner, _tokenId);
    removeTokenFrom(_owner, _tokenId);
    emit Transfer(_owner, address(0), _tokenId);
  }

  /**
   * @dev Internal function to clear current approval of a given token ID
   * Reverts if the given address is not indeed the owner of the token
   * @param _owner owner of the token
   * @param _tokenId uint256 ID of the token to be transferred
   */
  function clearApproval(address _owner, uint256 _tokenId) internal {
    require(ownerOf(_tokenId) == _owner);
    if (tokenApprovals[_tokenId] != address(0)) {
      tokenApprovals[_tokenId] = address(0);
    }
  }

  /**
   * @dev Internal function to add a token ID to the list of a given address
   * @param _to address representing the new owner of the given token ID
   * @param _tokenId uint256 ID of the token to be added to the tokens list of the given address
   */
  function addTokenTo(address _to, uint256 _tokenId) internal {
    require(tokenOwner[_tokenId] == address(0));
    tokenOwner[_tokenId] = _to;
    ownedTokensCount[_to] = ownedTokensCount[_to].add(1);
  }

  /**
   * @dev Internal function to remove a token ID from the list of a given address
   * @param _from address representing the previous owner of the given token ID
   * @param _tokenId uint256 ID of the token to be removed from the tokens list of the given address
   */
  function removeTokenFrom(address _from, uint256 _tokenId) internal {
    require(ownerOf(_tokenId) == _from);
    ownedTokensCount[_from] = ownedTokensCount[_from].sub(1);
    tokenOwner[_tokenId] = address(0);
  }

  /**
   * @dev Internal function to invoke `onERC721Received` on a target address
   * The call is not executed if the target address is not a contract
   * @param _from address representing the previous owner of the given token ID
   * @param _to target address that will receive the tokens
   * @param _tokenId uint256 ID of the token to be transferred
   * @param _data bytes optional data to send along with the call
   * @return whether the call correctly returned the expected magic value
   */
  function checkAndCallSafeTransfer(
    address _from,
    address _to,
    uint256 _tokenId,
    bytes _data
  )
    internal
    returns (bool)
  {
    if (!_to.isContract()) {
      return true;
    }
    bytes4 retval = ERC721Receiver(_to).onERC721Received(
      msg.sender, _from, _tokenId, _data);
    return (retval == ERC721_RECEIVED);
  }
}







/**
 * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension
 * @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md
 */
contract ERC721Enumerable is ERC721Basic {
  function totalSupply() public view returns (uint256);
  function tokenOfOwnerByIndex(
    address _owner,
    uint256 _index
  )
    public
    view
    returns (uint256 _tokenId);

  function tokenByIndex(uint256 _index) public view returns (uint256);
}


/**
 * @title ERC-721 Non-Fungible Token Standard, optional metadata extension
 * @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md
 */
contract ERC721Metadata is ERC721Basic {
  function name() external view returns (string _name);
  function symbol() external view returns (string _symbol);
  function tokenURI(uint256 _tokenId) public view returns (string);
}


/**
 * @title ERC-721 Non-Fungible Token Standard, full implementation interface
 * @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md
 */
contract ERC721 is ERC721Basic, ERC721Enumerable, ERC721Metadata {
}








/**
 * @title Full ERC721 Token
 * This implementation includes all the required and some optional functionality of the ERC721 standard
 * Moreover, it includes approve all functionality using operator terminology
 * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md
 */
contract ERC721Token is SupportsInterfaceWithLookup, ERC721BasicToken, ERC721 {

  // Token name
  string internal name_;

  // Token symbol
  string internal symbol_;

  // Mapping from owner to list of owned token IDs
  mapping(address => uint256[]) internal ownedTokens;

  // Mapping from token ID to index of the owner tokens list
  mapping(uint256 => uint256) internal ownedTokensIndex;

  // Array with all token ids, used for enumeration
  uint256[] internal allTokens;

  // Mapping from token id to position in the allTokens array
  mapping(uint256 => uint256) internal allTokensIndex;

  // Optional mapping for token URIs
  mapping(uint256 => string) internal tokenURIs;

  /**
   * @dev Constructor function
   */
  constructor(string _name, string _symbol) public {
    name_ = _name;
    symbol_ = _symbol;

    // register the supported interfaces to conform to ERC721 via ERC165
    _registerInterface(InterfaceId_ERC721Enumerable);
    _registerInterface(InterfaceId_ERC721Metadata);
  }

  /**
   * @dev Gets the token name
   * @return string representing the token name
   */
  function name() external view returns (string) {
    return name_;
  }

  /**
   * @dev Gets the token symbol
   * @return string representing the token symbol
   */
  function symbol() external view returns (string) {
    return symbol_;
  }

  /**
   * @dev Returns an URI for a given token ID
   * Throws if the token ID does not exist. May return an empty string.
   * @param _tokenId uint256 ID of the token to query
   */
  function tokenURI(uint256 _tokenId) public view returns (string) {
    require(exists(_tokenId));
    return tokenURIs[_tokenId];
  }

  /**
   * @dev Gets the token ID at a given index of the tokens list of the requested owner
   * @param _owner address owning the tokens list to be accessed
   * @param _index uint256 representing the index to be accessed of the requested tokens list
   * @return uint256 token ID at the given index of the tokens list owned by the requested address
   */
  function tokenOfOwnerByIndex(
    address _owner,
    uint256 _index
  )
    public
    view
    returns (uint256)
  {
    require(_index < balanceOf(_owner));
    return ownedTokens[_owner][_index];
  }

  /**
   * @dev Gets the total amount of tokens stored by the contract
   * @return uint256 representing the total amount of tokens
   */
  function totalSupply() public view returns (uint256) {
    return allTokens.length;
  }

  /**
   * @dev Gets the token ID at a given index of all the tokens in this contract
   * Reverts if the index is greater or equal to the total number of tokens
   * @param _index uint256 representing the index to be accessed of the tokens list
   * @return uint256 token ID at the given index of the tokens list
   */
  function tokenByIndex(uint256 _index) public view returns (uint256) {
    require(_index < totalSupply());
    return allTokens[_index];
  }

  /**
   * @dev Internal function to set the token URI for a given token
   * Reverts if the token ID does not exist
   * @param _tokenId uint256 ID of the token to set its URI
   * @param _uri string URI to assign
   */
  function _setTokenURI(uint256 _tokenId, string _uri) internal {
    require(exists(_tokenId));
    tokenURIs[_tokenId] = _uri;
  }

  /**
   * @dev Internal function to add a token ID to the list of a given address
   * @param _to address representing the new owner of the given token ID
   * @param _tokenId uint256 ID of the token to be added to the tokens list of the given address
   */
  function addTokenTo(address _to, uint256 _tokenId) internal {
    super.addTokenTo(_to, _tokenId);
    uint256 length = ownedTokens[_to].length;
    ownedTokens[_to].push(_tokenId);
    ownedTokensIndex[_tokenId] = length;
  }

  /**
   * @dev Internal function to remove a token ID from the list of a given address
   * @param _from address representing the previous owner of the given token ID
   * @param _tokenId uint256 ID of the token to be removed from the tokens list of the given address
   */
  function removeTokenFrom(address _from, uint256 _tokenId) internal {
    super.removeTokenFrom(_from, _tokenId);

    // To prevent a gap in the array, we store the last token in the index of the token to delete, and
    // then delete the last slot.
    uint256 tokenIndex = ownedTokensIndex[_tokenId];
    uint256 lastTokenIndex = ownedTokens[_from].length.sub(1);
    uint256 lastToken = ownedTokens[_from][lastTokenIndex];

    ownedTokens[_from][tokenIndex] = lastToken;
    ownedTokens[_from].length--;
    // ^ This also deletes the contents at the last position of the array

    // Note that this will handle single-element arrays. In that case, both tokenIndex and lastTokenIndex are going to
    // be zero. Then we can make sure that we will remove _tokenId from the ownedTokens list since we are first swapping
    // the lastToken to the first position, and then dropping the element placed in the last position of the list

    ownedTokensIndex[_tokenId] = 0;
    ownedTokensIndex[lastToken] = tokenIndex;
  }

  /**
   * @dev Internal function to mint a new token
   * Reverts if the given token ID already exists
   * @param _to address the beneficiary that will own the minted token
   * @param _tokenId uint256 ID of the token to be minted by the msg.sender
   */
  function _mint(address _to, uint256 _tokenId) internal {
    super._mint(_to, _tokenId);

    allTokensIndex[_tokenId] = allTokens.length;
    allTokens.push(_tokenId);
  }

  /**
   * @dev Internal function to burn a specific token
   * Reverts if the token does not exist
   * @param _owner owner of the token to burn
   * @param _tokenId uint256 ID of the token being burned by the msg.sender
   */
  function _burn(address _owner, uint256 _tokenId) internal {
    super._burn(_owner, _tokenId);

    // Clear metadata (if any)
    if (bytes(tokenURIs[_tokenId]).length != 0) {
      delete tokenURIs[_tokenId];
    }

    // Reorg all tokens array
    uint256 tokenIndex = allTokensIndex[_tokenId];
    uint256 lastTokenIndex = allTokens.length.sub(1);
    uint256 lastToken = allTokens[lastTokenIndex];

    allTokens[tokenIndex] = lastToken;
    allTokens[lastTokenIndex] = 0;

    allTokens.length--;
    allTokensIndex[_tokenId] = 0;
    allTokensIndex[lastToken] = tokenIndex;
  }

}






/**
 * @title Ownable
 * @dev The Ownable contract has an owner address, and provides basic authorization control
 * functions, this simplifies the implementation of "user permissions".
 */
contract Ownable {
  address public owner;


  event OwnershipRenounced(address indexed previousOwner);
  event OwnershipTransferred(
    address indexed previousOwner,
    address indexed newOwner
  );


  /**
   * @dev The Ownable constructor sets the original `owner` of the contract to the sender
   * account.
   */
  constructor() public {
    owner = msg.sender;
  }

  /**
   * @dev Throws if called by any account other than the owner.
   */
  modifier onlyOwner() {
    require(msg.sender == owner);
    _;
  }

  /**
   * @dev Allows the current owner to relinquish control of the contract.
   * @notice Renouncing to ownership will leave the contract without an owner.
   * It will not be possible to call the functions with the `onlyOwner`
   * modifier anymore.
   */
  function renounceOwnership() public onlyOwner {
    emit OwnershipRenounced(owner);
    owner = address(0);
  }

  /**
   * @dev Allows the current owner to transfer control of the contract to a newOwner.
   * @param _newOwner The address to transfer ownership to.
   */
  function transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }

  /**
   * @dev Transfers control of the contract to a newOwner.
   * @param _newOwner The address to transfer ownership to.
   */
  function _transferOwnership(address _newOwner) internal {
    require(_newOwner != address(0));
    emit OwnershipTransferred(owner, _newOwner);
    owner = _newOwner;
  }
}




contract CKInterface {
  function totalSupply() public view returns (uint256 total);
  function tokensOfOwner(address _owner) external view returns (uint256[] tokenIds);
  function balanceOf(address _owner) public view returns (uint256 balance);
  function ownerOf(uint256 _tokenId) external view returns (address owner);
  function transferFrom(address _from, address _to, uint256 _tokenId) external;
  function approve(address _to, uint256 _tokenId) external;

  function createPromoKitty(uint256 _genes, address _owner) external;
}




/// @title E.T.H. (Extreme Time Heroes) Access Contract for beta and main sale
/// @author Nathan Ginnever

contract ETHAccess is Ownable, ERC721Token {

  uint256 public betaQRTLimit = 10000; // 10 for testing, 10000 mainnet
  uint256 public totalPortalKitties = 0;
  uint256 public QRTprice = 200 finney;

  CKInterface public ck;

  struct Participant {
    address party;
    uint256 numPortalKitties;
  }

  // we can use this mapping to allow kitty depositers to claim an E.T.H. fighter NFT in the future
  mapping(address => Participant) public participants;

  event QRTPurchase(
    address indexed _from,
    uint256 indexed _time,
    uint256 indexed _tokenId
  );

  event KittiesPortal(
    address indexed _from,
    uint256 indexed _time
  );

  constructor(
    address _ckAddress,
    address _secureWallet,
    string name, 
    string symbol) 
    public 
    ERC721Token(name, symbol)
  {
    owner = _secureWallet;
    ck = CKInterface(_ckAddress);
    super._mint(msg.sender, 0);
  }

  function purchaseQRT() public payable {
    require(msg.value == QRTprice);
    require(totalSupply() < betaQRTLimit);

    uint256 _tokenID = totalSupply().add(1);

    participants[msg.sender].party = msg.sender;

    super._mint(msg.sender, _tokenID);
    emit QRTPurchase(msg.sender, now, _tokenID);
  }

  function portalKitty(uint256 id) public {
    require(ck.ownerOf(id) == msg.sender);

    // this assumes client calls an approval for each cryptokitty id
    ck.transferFrom(msg.sender, address(this), id);

    participants[msg.sender].numPortalKitties = participants[msg.sender].numPortalKitties.add(1);
    totalPortalKitties = totalPortalKitties.add(1);
    emit KittiesPortal(msg.sender, now);
  }

  function withdraw() onlyOwner public {
    owner.transfer(address(this).balance);
  }
}


{
  "linkReferences": {},
  "object": "6080604052612710600d556000600e556702c68af0bb140000600f553480156200002857600080fd5b50604051620019ab380380620019ab8339810160409081528151602083015191830151606084015160008054600160a060020a031916331790559193908101910181816200009f7f01ffc9a700000000000000000000000000000000000000000000000000000000640100000000620001ee810204565b620000d37f80ac58cd00000000000000000000000000000000000000000000000000000000640100000000620001ee810204565b620001077f4f558e7900000000000000000000000000000000000000000000000000000000640100000000620001ee810204565b81516200011c90600690602085019062000426565b5080516200013290600790602084019062000426565b50620001677f780e9d6300000000000000000000000000000000000000000000000000000000640100000000620001ee810204565b6200019b7f5b5e139f00000000000000000000000000000000000000000000000000000000640100000000620001ee810204565b505060008054600160a060020a03808616600160a060020a03199283161783556010805491881691909216179055620001e4903390640100000000620010b96200025e82021704565b50505050620004cb565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156200021e57600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152600160208190526040909120805460ff19169091179055565b62000278828264010000000062001404620002bd82021704565b600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8015550565b600160a060020a0382161515620002d357600080fd5b620002e8828264010000000062000324810204565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000620003408383640100000000620013806200037d82021704565b50600160a060020a039091166000908152600860209081526040808320805460018101825590845282842081018590559383526009909152902055565b600081815260026020526040902054600160a060020a031615620003a057600080fd5b60008181526002602090815260408083208054600160a060020a031916600160a060020a03871690811790915583526004909152902054620003f2906001640100000000620004128102620010ac1704565b600160a060020a0390921660009081526004602052604090209190915550565b818101828110156200042057fe5b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200046957805160ff191683800117855562000499565b8280016001018555821562000499579182015b82811115620004995782518255916020019190600101906200047c565b50620004a7929150620004ab565b5090565b620004c891905b80821115620004a75760008155600101620004b2565b90565b6114d080620004db6000396000f3006080604052600436106101745763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301ffc9a7811461017957806306fdde03146101af578063081812fc14610239578063095ea7b31461026d57806309e69ede1461029357806318160ddd146102d757806319fa8f50146102fe57806323b872dd146103305780632aefb19c1461035a5780632f745c591461036f5780633c461c37146103935780633ccfd60b146103a857806342842e0e146103bd5780634f558e79146103e75780634f6ccce7146103ff5780636352211e1461041757806370a082311461042f578063715018a61461045057806371e0e2dc146104655780638da5cb5b1461046d57806395d89b41146104825780639a6979cd146104975780639fd1549e146104af578063a22cb465146104c4578063b88d4fde146104ea578063c87b56dd14610559578063e985e9c514610571578063f2fde38b14610598578063f5c901db146105b9575b600080fd5b34801561018557600080fd5b5061019b600160e060020a0319600435166105ce565b604080519115158252519081900360200190f35b3480156101bb57600080fd5b506101c46105ed565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101fe5781810151838201526020016101e6565b50505050905090810190601f16801561022b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561024557600080fd5b50610251600435610684565b60408051600160a060020a039092168252519081900360200190f35b34801561027957600080fd5b50610291600160a060020a036004351660243561069f565b005b34801561029f57600080fd5b506102b4600160a060020a0360043516610748565b60408051600160a060020a03909316835260208301919091528051918290030190f35b3480156102e357600080fd5b506102ec61076d565b60408051918252519081900360200190f35b34801561030a57600080fd5b50610313610773565b60408051600160e060020a03199092168252519081900360200190f35b34801561033c57600080fd5b50610291600160a060020a0360043581169060243516604435610797565b34801561036657600080fd5b506102ec61083a565b34801561037b57600080fd5b506102ec600160a060020a0360043516602435610840565b34801561039f57600080fd5b506102ec61088d565b3480156103b457600080fd5b50610291610893565b3480156103c957600080fd5b50610291600160a060020a03600435811690602435166044356108e8565b3480156103f357600080fd5b5061019b600435610909565b34801561040b57600080fd5b506102ec600435610926565b34801561042357600080fd5b5061025160043561095b565b34801561043b57600080fd5b506102ec600160a060020a0360043516610985565b34801561045c57600080fd5b506102916109b8565b610291610a17565b34801561047957600080fd5b50610251610ab4565b34801561048e57600080fd5b506101c4610ac3565b3480156104a357600080fd5b50610291600435610b24565b3480156104bb57600080fd5b506102ec610cd5565b3480156104d057600080fd5b50610291600160a060020a03600435166024351515610cdb565b3480156104f657600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261029194600160a060020a038135811695602480359092169560443595369560849401918190840183828082843750949750610d5f9650505050505050565b34801561056557600080fd5b506101c4600435610d87565b34801561057d57600080fd5b5061019b600160a060020a0360043581169060243516610e3c565b3480156105a457600080fd5b50610291600160a060020a0360043516610e6a565b3480156105c557600080fd5b50610251610e8a565b600160e060020a03191660009081526001602052604090205460ff1690565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106795780601f1061064e57610100808354040283529160200191610679565b820191906000526020600020905b81548152906001019060200180831161065c57829003601f168201915b505050505090505b90565b600090815260036020526040902054600160a060020a031690565b60006106aa8261095b565b9050600160a060020a0383811690821614156106c557600080fd5b33600160a060020a03821614806106e157506106e18133610e3c565b15156106ec57600080fd5b6000828152600360205260408082208054600160a060020a031916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60116020526000908152604090208054600190910154600160a060020a039091169082565b600a5490565b7f01ffc9a70000000000000000000000000000000000000000000000000000000081565b6107a13382610e99565b15156107ac57600080fd5b600160a060020a03831615156107c157600080fd5b600160a060020a03821615156107d657600080fd5b6107e08382610ef8565b6107ea8382610f5c565b6107f48282611063565b8082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600d5481565b600061084b83610985565b821061085657600080fd5b600160a060020a038316600090815260086020526040902080548390811061087a57fe5b9060005260206000200154905092915050565b600f5481565b600054600160a060020a031633146108aa57600080fd5b60008054604051600160a060020a0390911691303180156108fc02929091818181858888f193505050501580156108e5573d6000803e3d6000fd5b50565b6109048383836020604051908101604052806000815250610d5f565b505050565b600090815260026020526040902054600160a060020a0316151590565b600061093061076d565b821061093b57600080fd5b600a80548390811061094957fe5b90600052602060002001549050919050565b600081815260026020526040812054600160a060020a031680151561097f57600080fd5b92915050565b6000600160a060020a038216151561099c57600080fd5b50600160a060020a031660009081526004602052604090205490565b600054600160a060020a031633146109cf57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a260008054600160a060020a0319169055565b600f546000903414610a2857600080fd5b600d54610a3361076d565b10610a3d57600080fd5b610a566001610a4a61076d565b9063ffffffff6110ac16565b3360008181526011602052604090208054600160a060020a03191682179055909150610a8290826110b9565b6040518190429033907f01bdca7ec6d4840d7481f12f165ab469f9943fa4780125e5429241cbcfc2f2a490600090a450565b600054600160a060020a031681565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106795780601f1061064e57610100808354040283529160200191610679565b601054604080517f6352211e0000000000000000000000000000000000000000000000000000000081526004810184905290513392600160a060020a031691636352211e9160248083019260209291908290030181600087803b158015610b8a57600080fd5b505af1158015610b9e573d6000803e3d6000fd5b505050506040513d6020811015610bb457600080fd5b5051600160a060020a031614610bc957600080fd5b601054604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490529051600160a060020a03909216916323b872dd9160648082019260009290919082900301818387803b158015610c3b57600080fd5b505af1158015610c4f573d6000803e3d6000fd5b5050336000908152601160205260409020600190810154610c789350915063ffffffff6110ac16565b336000908152601160205260409020600190810191909155600e54610ca29163ffffffff6110ac16565b600e55604051429033907fe61805e2b0dd417d272320bdb786471c411b928644454606bd864d95a0242cae90600090a350565b600e5481565b600160a060020a038216331415610cf157600080fd5b336000818152600560209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610d6a848484610797565b610d7684848484611108565b1515610d8157600080fd5b50505050565b6060610d9282610909565b1515610d9d57600080fd5b6000828152600c602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610e305780601f10610e0557610100808354040283529160200191610e30565b820191906000526020600020905b815481529060010190602001808311610e1357829003601f168201915b50505050509050919050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600054600160a060020a03163314610e8157600080fd5b6108e581611275565b601054600160a060020a031681565b600080610ea58361095b565b905080600160a060020a031684600160a060020a03161480610ee0575083600160a060020a0316610ed584610684565b600160a060020a0316145b80610ef05750610ef08185610e3c565b949350505050565b81600160a060020a0316610f0b8261095b565b600160a060020a031614610f1e57600080fd5b600081815260036020526040902054600160a060020a031615610f585760008181526003602052604090208054600160a060020a03191690555b5050565b6000806000610f6b85856112e5565b600084815260096020908152604080832054600160a060020a0389168452600890925290912054909350610fa690600163ffffffff61136e16565b600160a060020a038616600090815260086020526040902080549193509083908110610fce57fe5b90600052602060002001549050806008600087600160a060020a0316600160a060020a031681526020019081526020016000208481548110151561100e57fe5b6000918252602080832090910192909255600160a060020a0387168152600890915260409020805490611045906000198301611467565b50600093845260096020526040808520859055908452909220555050565b600061106f8383611380565b50600160a060020a039091166000908152600860209081526040808320805460018101825590845282842081018590559383526009909152902055565b8181018281101561097f57fe5b6110c38282611404565b600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8015550565b60008061111d85600160a060020a031661145f565b151561112c576001915061126c565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03898116602485015260448401889052608060648501908152875160848601528751918a169463150b7a0294938c938b938b93909160a490910190602085019080838360005b838110156111bf5781810151838201526020016111a7565b50505050905090810190601f1680156111ec5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561120e57600080fd5b505af1158015611222573d6000803e3d6000fd5b505050506040513d602081101561123857600080fd5b5051600160e060020a031981167f150b7a020000000000000000000000000000000000000000000000000000000014925090505b50949350505050565b600160a060020a038116151561128a57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360008054600160a060020a031916600160a060020a0392909216919091179055565b81600160a060020a03166112f88261095b565b600160a060020a03161461130b57600080fd5b600160a060020a03821660009081526004602052604090205461133590600163ffffffff61136e16565b600160a060020a039092166000908152600460209081526040808320949094559181526002909152208054600160a060020a0319169055565b60008282111561137a57fe5b50900390565b600081815260026020526040902054600160a060020a0316156113a257600080fd5b60008181526002602090815260408083208054600160a060020a031916600160a060020a038716908117909155835260049091529020546113e49060016110ac565b600160a060020a0390921660009081526004602052604090209190915550565b600160a060020a038216151561141957600080fd5b6114238282611063565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000903b1190565b8154818355818111156109045760008381526020902061090491810190830161068191905b808211156114a0576000815560010161148c565b50905600a165627a7a72305820a6ae82c8740ed82303428669c867070ef82014597282fb22763d554722a12fde0029",
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x2710 PUSH1 0xD SSTORE PUSH1 0x0 PUSH1 0xE SSTORE PUSH8 0x2C68AF0BB140000 PUSH1 0xF SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x19AB CODESIZE SUB DUP1 PUSH3 0x19AB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD SWAP2 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE SWAP2 SWAP4 SWAP1 DUP2 ADD SWAP2 ADD DUP2 DUP2 PUSH3 0x9F PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH5 0x100000000 PUSH3 0x1EE DUP2 MUL DIV JUMP JUMPDEST PUSH3 0xD3 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH5 0x100000000 PUSH3 0x1EE DUP2 MUL DIV JUMP JUMPDEST PUSH3 0x107 PUSH32 0x4F558E7900000000000000000000000000000000000000000000000000000000 PUSH5 0x100000000 PUSH3 0x1EE DUP2 MUL DIV JUMP JUMPDEST DUP2 MLOAD PUSH3 0x11C SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x426 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x132 SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x426 JUMP JUMPDEST POP PUSH3 0x167 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH5 0x100000000 PUSH3 0x1EE DUP2 MUL DIV JUMP JUMPDEST PUSH3 0x19B PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH5 0x100000000 PUSH3 0x1EE DUP2 MUL DIV JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP3 DUP4 AND OR DUP4 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP2 DUP9 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH3 0x1E4 SWAP1 CALLER SWAP1 PUSH5 0x100000000 PUSH3 0x10B9 PUSH3 0x25E DUP3 MUL OR DIV JUMP JUMPDEST POP POP POP POP PUSH3 0x4CB JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP1 DUP3 AND EQ ISZERO PUSH3 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x278 DUP3 DUP3 PUSH5 0x100000000 PUSH3 0x1404 PUSH3 0x2BD DUP3 MUL OR DIV JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH3 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2E8 DUP3 DUP3 PUSH5 0x100000000 PUSH3 0x324 DUP2 MUL DIV JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x340 DUP4 DUP4 PUSH5 0x100000000 PUSH3 0x1380 PUSH3 0x37D DUP3 MUL OR DIV JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP2 ADD DUP6 SWAP1 SSTORE SWAP4 DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH3 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH3 0x3F2 SWAP1 PUSH1 0x1 PUSH5 0x100000000 PUSH3 0x412 DUP2 MUL PUSH3 0x10AC OR DIV JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH3 0x420 JUMPI INVALID JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x469 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x499 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x499 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x499 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x47C JUMP JUMPDEST POP PUSH3 0x4A7 SWAP3 SWAP2 POP PUSH3 0x4AB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x4C8 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x4A7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4B2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x14D0 DUP1 PUSH3 0x4DB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x174 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x1FFC9A7 DUP2 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x9E69EDE EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x19FA8F50 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x2AEFB19C EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x3C461C37 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x71E0E2DC EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x9A6979CD EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0x9FD1549E EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0xF5C901DB EQ PUSH2 0x5B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT PUSH1 0x4 CALLDATALOAD AND PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x22B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH1 0x4 CALLDATALOAD PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x69F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x748 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x797 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x83A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x840 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x88D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH2 0x893 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x8E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 CALLDATALOAD PUSH2 0x909 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH1 0x4 CALLDATALOAD PUSH2 0x926 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH1 0x4 CALLDATALOAD PUSH2 0x95B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x985 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x291 PUSH2 0xA17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0xAB4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0xAC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH1 0x4 CALLDATALOAD PUSH2 0xB24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0xCD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD ISZERO ISZERO PUSH2 0xCDB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x64 CALLDATALOAD PUSH1 0x4 DUP2 DUP2 ADD CALLDATALOAD SWAP3 DUP4 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE PUSH2 0x291 SWAP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD DUP2 AND SWAP6 PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 SWAP3 AND SWAP6 PUSH1 0x44 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 PUSH1 0x84 SWAP5 ADD SWAP2 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0xD5F SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x565 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH1 0x4 CALLDATALOAD PUSH2 0xD87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xE3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xE6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x679 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x64E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x679 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x65C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AA DUP3 PUSH2 0x95B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND SWAP1 DUP3 AND EQ ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND EQ DUP1 PUSH2 0x6E1 JUMPI POP PUSH2 0x6E1 DUP2 CALLER PUSH2 0xE3C JUMP JUMPDEST ISZERO ISZERO PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x7A1 CALLER DUP3 PUSH2 0xE99 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x7AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E0 DUP4 DUP3 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x7EA DUP4 DUP3 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x7F4 DUP3 DUP3 PUSH2 0x1063 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84B DUP4 PUSH2 0x985 JUMP JUMPDEST DUP3 LT PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x87A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x8AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 ADDRESS BALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x904 DUP4 DUP4 DUP4 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD5F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x930 PUSH2 0x76D JUMP JUMPDEST DUP3 LT PUSH2 0x93B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x949 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP1 ISZERO ISZERO PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x9CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP2 LOG2 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 CALLVALUE EQ PUSH2 0xA28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH2 0xA33 PUSH2 0x76D JUMP JUMPDEST LT PUSH2 0xA3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA56 PUSH1 0x1 PUSH2 0xA4A PUSH2 0x76D JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x10AC AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND DUP3 OR SWAP1 SSTORE SWAP1 SWAP2 POP PUSH2 0xA82 SWAP1 DUP3 PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 TIMESTAMP SWAP1 CALLER SWAP1 PUSH32 0x1BDCA7EC6D4840D7481F12F165AB469F9943FA4780125E5429241CBCFC2F2A4 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x679 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x64E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP2 PUSH4 0x6352211E SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH2 0xC78 SWAP4 POP SWAP2 POP PUSH4 0xFFFFFFFF PUSH2 0x10AC AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xE SLOAD PUSH2 0xCA2 SWAP2 PUSH4 0xFFFFFFFF PUSH2 0x10AC AND JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0x40 MLOAD TIMESTAMP SWAP1 CALLER SWAP1 PUSH32 0xE61805E2B0DD417D272320BDB786471C411B928644454606BD864D95A0242CAE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND CALLER EQ ISZERO PUSH2 0xCF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xD6A DUP5 DUP5 DUP5 PUSH2 0x797 JUMP JUMPDEST PUSH2 0xD76 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1108 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD92 DUP3 PUSH2 0x909 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xD9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP5 SWAP1 DIV DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE30 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE05 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE30 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE13 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E5 DUP2 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEA5 DUP4 PUSH2 0x95B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ DUP1 PUSH2 0xEE0 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0xED5 DUP5 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ JUMPDEST DUP1 PUSH2 0xEF0 JUMPI POP PUSH2 0xEF0 DUP2 DUP6 PUSH2 0xE3C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0xF0B DUP3 PUSH2 0x95B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH2 0xF1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0xF58 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xF6B DUP6 DUP6 PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND DUP5 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP4 POP PUSH2 0xFA6 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x136E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP4 POP SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xFCE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x100E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x1045 SWAP1 PUSH1 0x0 NOT DUP4 ADD PUSH2 0x1467 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 DUP5 MSTORE SWAP1 SWAP3 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106F DUP4 DUP4 PUSH2 0x1380 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP2 ADD DUP6 SWAP1 SSTORE SWAP4 DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x97F JUMPI INVALID JUMPDEST PUSH2 0x10C3 DUP3 DUP3 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111D DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x145F JUMP JUMPDEST ISZERO ISZERO PUSH2 0x112C JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x126C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 DUP2 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x64 DUP6 ADD SWAP1 DUP2 MSTORE DUP8 MLOAD PUSH1 0x84 DUP7 ADD MSTORE DUP8 MLOAD SWAP2 DUP11 AND SWAP5 PUSH4 0x150B7A02 SWAP5 SWAP4 DUP13 SWAP4 DUP12 SWAP4 DUP12 SWAP4 SWAP1 SWAP2 PUSH1 0xA4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11BF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11A7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11EC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x120E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1222 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0xE0 PUSH1 0x2 EXP SUB NOT DUP2 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP3 POP SWAP1 POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x128A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x12F8 DUP3 PUSH2 0x95B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ PUSH2 0x130B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1335 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x136E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x137A JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO PUSH2 0x13A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x13E4 SWAP1 PUSH1 0x1 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x1419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1423 DUP3 DUP3 PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 EXTCODESIZE GT SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0x904 SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0x681 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x14A0 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x148C JUMP JUMPDEST POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xa6 0xae DUP3 0xc8 PUSH21 0xED82303428669C867070EF82014597282FB22763D SSTORE 0x47 0x22 LOG1 0x2f 0xde STOP 0x29 ",
  "sourceMap": "28452:1705:0:-;;;28530:5;28500:35;;28608:1;28572:37;;28639:10;28613:36;;29105:244;8:9:-1;5:2;;;30:1;27;20:12;5:2;29105:244:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26682:5;:18;;-1:-1:-1;;;;;;26682:18:0;26690:10;26682:18;;;29105:244;;;;;;;;;5994:38;6013:18;5994;;;;:38;:::i;:::-;8903;8922:18;8903;;;;:38;:::i;:::-;8947:44;8966:24;8947:18;;;;:44;:::i;:::-;20600:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;20619:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;20716:48:0;20735:28;20716:18;;;;:48;:::i;:::-;20770:46;20789:26;20770:18;;;;:46;:::i;:::-;-1:-1:-1;;29257:5:0;:21;;-1:-1:-1;;;;;29257:21:0;;;-1:-1:-1;;;;;;29257:21:0;;;;;;29284:2;:28;;;;;;;;;;;;29318:26;;29330:10;;29318:11;;;;;;:26;:::i;:::-;29105:244;;;;28452:1705;;6332:156;6410:26;;;;;;6402:35;;;;;;6443:33;;;;;;6479:4;6443:33;;;;;;;;:40;;-1:-1:-1;;6443:40:0;;;;;;6332:156::o;25143:172::-;25204:26;25216:3;25221:8;25204:11;;;;;;:26;:::i;:::-;25264:9;:16;;25237:24;;;;:14;:24;;;;;:43;;;39:1:-1;23:18;;45:23;;25286:24:0;;;;;;;-1:-1:-1;25143:172:0:o;15602:169::-;-1:-1:-1;;;;;15671:17:0;;;;15663:26;;;;;;15695:25;15706:3;15711:8;15695:10;;;;:25;:::i;:::-;15731:35;;15757:8;;-1:-1:-1;;;;;15731:35:0;;;15748:1;;15731:35;;15748:1;;15731:35;15602:169;;:::o;23353:226::-;23456:14;23419:31;23436:3;23441:8;23419:16;;;;;;:31;:::i;:::-;-1:-1:-1;;;;;;23473:16:0;;;;;;;:11;:16;;;;;;;;:23;;39:1:-1;23:18;;45:23;;23502:31:0;;;;;;;;;;;23539:26;;;:16;:26;;;;;:35;23353:226::o;16884:204::-;16990:1;16958:20;;;:10;:20;;;;;;-1:-1:-1;;;;;16958:20:0;:34;16950:43;;;;;;16999:20;;;;:10;:20;;;;;;;;:26;;-1:-1:-1;;;;;;16999:26:0;-1:-1:-1;;;;;16999:26:0;;;;;;;;17055:21;;:16;:21;;;;;;:28;;-1:-1:-1;17055:25:0;;;;;;:28;:::i;:::-;-1:-1:-1;;;;;17031:21:0;;;;;;;:16;:21;;;;;:52;;;;-1:-1:-1;16884:204:0:o;2207:123::-;2286:5;;;2304:6;;;;2297:14;;;;2207:123;;;;:::o;28452:1705::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28452:1705:0;;;-1:-1:-1;28452:1705:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"


input args

0x6080604052612710600d556000600e556702c68af0bb140000600f553480156200002857600080fd5b50604051620019ab380380620019ab8339810160409081528151602083015191830151606084015160008054600160a060020a031916331790559193908101910181816200009f7f01ffc9a700000000000000000000000000000000000000000000000000000000640100000000620001ee810204565b620000d37f80ac58cd00000000000000000000000000000000000000000000000000000000640100000000620001ee810204565b620001077f4f558e7900000000000000000000000000000000000000000000000000000000640100000000620001ee810204565b81516200011c90600690602085019062000426565b5080516200013290600790602084019062000426565b50620001677f780e9d6300000000000000000000000000000000000000000000000000000000640100000000620001ee810204565b6200019b7f5b5e139f00000000000000000000000000000000000000000000000000000000640100000000620001ee810204565b505060008054600160a060020a03808616600160a060020a03199283161783556010805491881691909216179055620001e4908490640100000000620010b96200025e82021704565b50505050620004cb565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156200021e57600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152600160208190526040909120805460ff19169091179055565b62000278828264010000000062001404620002bd82021704565b600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8015550565b600160a060020a0382161515620002d357600080fd5b620002e8828264010000000062000324810204565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000620003408383640100000000620013806200037d82021704565b50600160a060020a039091166000908152600860209081526040808320805460018101825590845282842081018590559383526009909152902055565b600081815260026020526040902054600160a060020a031615620003a057600080fd5b60008181526002602090815260408083208054600160a060020a031916600160a060020a03871690811790915583526004909152902054620003f2906001640100000000620004128102620010ac1704565b600160a060020a0390921660009081526004602052604090209190915550565b818101828110156200042057fe5b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200046957805160ff191683800117855562000499565b8280016001018555821562000499579182015b82811115620004995782518255916020019190600101906200047c565b50620004a7929150620004ab565b5090565b620004c891905b80821115620004a75760008155600101620004b2565b90565b6114d080620004db6000396000f3006080604052600436106101745763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301ffc9a7811461017957806306fdde03146101af578063081812fc14610239578063095ea7b31461026d57806309e69ede1461029357806318160ddd146102d757806319fa8f50146102fe57806323b872dd146103305780632aefb19c1461035a5780632f745c591461036f5780633c461c37146103935780633ccfd60b146103a857806342842e0e146103bd5780634f558e79146103e75780634f6ccce7146103ff5780636352211e1461041757806370a082311461042f578063715018a61461045057806371e0e2dc146104655780638da5cb5b1461046d57806395d89b41146104825780639a6979cd146104975780639fd1549e146104af578063a22cb465146104c4578063b88d4fde146104ea578063c87b56dd14610559578063e985e9c514610571578063f2fde38b14610598578063f5c901db146105b9575b600080fd5b34801561018557600080fd5b5061019b600160e060020a0319600435166105ce565b604080519115158252519081900360200190f35b3480156101bb57600080fd5b506101c46105ed565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101fe5781810151838201526020016101e6565b50505050905090810190601f16801561022b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561024557600080fd5b50610251600435610684565b60408051600160a060020a039092168252519081900360200190f35b34801561027957600080fd5b50610291600160a060020a036004351660243561069f565b005b34801561029f57600080fd5b506102b4600160a060020a0360043516610748565b60408051600160a060020a03909316835260208301919091528051918290030190f35b3480156102e357600080fd5b506102ec61076d565b60408051918252519081900360200190f35b34801561030a57600080fd5b50610313610773565b60408051600160e060020a03199092168252519081900360200190f35b34801561033c57600080fd5b50610291600160a060020a0360043581169060243516604435610797565b34801561036657600080fd5b506102ec61083a565b34801561037b57600080fd5b506102ec600160a060020a0360043516602435610840565b34801561039f57600080fd5b506102ec61088d565b3480156103b457600080fd5b50610291610893565b3480156103c957600080fd5b50610291600160a060020a03600435811690602435166044356108e8565b3480156103f357600080fd5b5061019b600435610909565b34801561040b57600080fd5b506102ec600435610926565b34801561042357600080fd5b5061025160043561095b565b34801561043b57600080fd5b506102ec600160a060020a0360043516610985565b34801561045c57600080fd5b506102916109b8565b610291610a17565b34801561047957600080fd5b50610251610ab4565b34801561048e57600080fd5b506101c4610ac3565b3480156104a357600080fd5b50610291600435610b24565b3480156104bb57600080fd5b506102ec610cd5565b3480156104d057600080fd5b50610291600160a060020a03600435166024351515610cdb565b3480156104f657600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261029194600160a060020a038135811695602480359092169560443595369560849401918190840183828082843750949750610d5f9650505050505050565b34801561056557600080fd5b506101c4600435610d87565b34801561057d57600080fd5b5061019b600160a060020a0360043581169060243516610e3c565b3480156105a457600080fd5b50610291600160a060020a0360043516610e6a565b3480156105c557600080fd5b50610251610e8a565b600160e060020a03191660009081526001602052604090205460ff1690565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106795780601f1061064e57610100808354040283529160200191610679565b820191906000526020600020905b81548152906001019060200180831161065c57829003601f168201915b505050505090505b90565b600090815260036020526040902054600160a060020a031690565b60006106aa8261095b565b9050600160a060020a0383811690821614156106c557600080fd5b33600160a060020a03821614806106e157506106e18133610e3c565b15156106ec57600080fd5b6000828152600360205260408082208054600160a060020a031916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60116020526000908152604090208054600190910154600160a060020a039091169082565b600a5490565b7f01ffc9a70000000000000000000000000000000000000000000000000000000081565b6107a13382610e99565b15156107ac57600080fd5b600160a060020a03831615156107c157600080fd5b600160a060020a03821615156107d657600080fd5b6107e08382610ef8565b6107ea8382610f5c565b6107f48282611063565b8082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600d5481565b600061084b83610985565b821061085657600080fd5b600160a060020a038316600090815260086020526040902080548390811061087a57fe5b9060005260206000200154905092915050565b600f5481565b600054600160a060020a031633146108aa57600080fd5b60008054604051600160a060020a0390911691303180156108fc02929091818181858888f193505050501580156108e5573d6000803e3d6000fd5b50565b6109048383836020604051908101604052806000815250610d5f565b505050565b600090815260026020526040902054600160a060020a0316151590565b600061093061076d565b821061093b57600080fd5b600a80548390811061094957fe5b90600052602060002001549050919050565b600081815260026020526040812054600160a060020a031680151561097f57600080fd5b92915050565b6000600160a060020a038216151561099c57600080fd5b50600160a060020a031660009081526004602052604090205490565b600054600160a060020a031633146109cf57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a260008054600160a060020a0319169055565b600f546000903414610a2857600080fd5b600d54610a3361076d565b10610a3d57600080fd5b610a566001610a4a61076d565b9063ffffffff6110ac16565b3360008181526011602052604090208054600160a060020a03191682179055909150610a8290826110b9565b6040518190429033907f01bdca7ec6d4840d7481f12f165ab469f9943fa4780125e5429241cbcfc2f2a490600090a450565b600054600160a060020a031681565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106795780601f1061064e57610100808354040283529160200191610679565b601054604080517f6352211e0000000000000000000000000000000000000000000000000000000081526004810184905290513392600160a060020a031691636352211e9160248083019260209291908290030181600087803b158015610b8a57600080fd5b505af1158015610b9e573d6000803e3d6000fd5b505050506040513d6020811015610bb457600080fd5b5051600160a060020a031614610bc957600080fd5b601054604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490529051600160a060020a03909216916323b872dd9160648082019260009290919082900301818387803b158015610c3b57600080fd5b505af1158015610c4f573d6000803e3d6000fd5b5050336000908152601160205260409020600190810154610c789350915063ffffffff6110ac16565b336000908152601160205260409020600190810191909155600e54610ca29163ffffffff6110ac16565b600e55604051429033907fe61805e2b0dd417d272320bdb786471c411b928644454606bd864d95a0242cae90600090a350565b600e5481565b600160a060020a038216331415610cf157600080fd5b336000818152600560209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610d6a848484610797565b610d7684848484611108565b1515610d8157600080fd5b50505050565b6060610d9282610909565b1515610d9d57600080fd5b6000828152600c602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610e305780601f10610e0557610100808354040283529160200191610e30565b820191906000526020600020905b815481529060010190602001808311610e1357829003601f168201915b50505050509050919050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600054600160a060020a03163314610e8157600080fd5b6108e581611275565b601054600160a060020a031681565b600080610ea58361095b565b905080600160a060020a031684600160a060020a03161480610ee0575083600160a060020a0316610ed584610684565b600160a060020a0316145b80610ef05750610ef08185610e3c565b949350505050565b81600160a060020a0316610f0b8261095b565b600160a060020a031614610f1e57600080fd5b600081815260036020526040902054600160a060020a031615610f585760008181526003602052604090208054600160a060020a03191690555b5050565b6000806000610f6b85856112e5565b600084815260096020908152604080832054600160a060020a0389168452600890925290912054909350610fa690600163ffffffff61136e16565b600160a060020a038616600090815260086020526040902080549193509083908110610fce57fe5b90600052602060002001549050806008600087600160a060020a0316600160a060020a031681526020019081526020016000208481548110151561100e57fe5b6000918252602080832090910192909255600160a060020a0387168152600890915260409020805490611045906000198301611467565b50600093845260096020526040808520859055908452909220555050565b600061106f8383611380565b50600160a060020a039091166000908152600860209081526040808320805460018101825590845282842081018590559383526009909152902055565b8181018281101561097f57fe5b6110c38282611404565b600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8015550565b60008061111d85600160a060020a031661145f565b151561112c576001915061126c565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03898116602485015260448401889052608060648501908152875160848601528751918a169463150b7a0294938c938b938b93909160a490910190602085019080838360005b838110156111bf5781810151838201526020016111a7565b50505050905090810190601f1680156111ec5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561120e57600080fd5b505af1158015611222573d6000803e3d6000fd5b505050506040513d602081101561123857600080fd5b5051600160e060020a031981167f150b7a020000000000000000000000000000000000000000000000000000000014925090505b50949350505050565b600160a060020a038116151561128a57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360008054600160a060020a031916600160a060020a0392909216919091179055565b81600160a060020a03166112f88261095b565b600160a060020a03161461130b57600080fd5b600160a060020a03821660009081526004602052604090205461133590600163ffffffff61136e16565b600160a060020a039092166000908152600460209081526040808320949094559181526002909152208054600160a060020a0319169055565b60008282111561137a57fe5b50900390565b600081815260026020526040902054600160a060020a0316156113a257600080fd5b60008181526002602090815260408083208054600160a060020a031916600160a060020a038716908117909155835260049091529020546113e49060016110ac565b600160a060020a0390921660009081526004602052604090209190915550565b600160a060020a038216151561141957600080fd5b6114238282611063565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000903b1190565b8154818355818111156109045760008381526020902061090491810190830161068191905b808211156114a0576000815560010161148c565b50905600a165627a7a72305820ed6e971405c20d514fa9f8f5d9e99d7e54558cebdb173f553f855b8160641292002900000000000000000000000006012c8cf97bead5deae237070f9587f8e7a266d00000000000000000000000084068c0b832e200bc44ea5bee3ea24b2e540bcc7000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000e452e542e482e205175617274657200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000065152544554480000000000000000000000000000000000000000000000000000